# Generated by Django 4.0.2 on 2022-10-31 08:52

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('street', models.CharField(max_length=255)),
                ('house', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('date', models.DateTimeField(default=datetime.datetime(2022, 10, 31, 8, 52, 58, 420441, tzinfo=utc))),
                ('rate', models.JSONField(default={'m': [], 'p': []})),
                ('reactions', models.JSONField(blank=True, default={})),
                ('comments', models.ManyToManyField(blank=True, to='Rule.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nick', models.CharField(max_length=255)),
                ('profile_img', models.ImageField(upload_to='profiles')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=17, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('bio', models.CharField(blank=True, max_length=255)),
                ('prv_key', models.BigIntegerField(default=0)),
                ('refresh', models.TextField(default='0')),
                ('addresses', models.ManyToManyField(blank=True, to='Rule.Address')),
            ],
        ),
        migrations.CreateModel(
            name='PostWithMark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, default='')),
                ('images', models.JSONField(blank=True, default={'images': []})),
                ('date', models.DateTimeField(default=datetime.datetime(2022, 10, 31, 8, 52, 58, 418441, tzinfo=utc))),
                ('mark', models.JSONField(default={'x': -1, 'y': -1})),
                ('title', models.CharField(default='', max_length=255)),
                ('rate', models.JSONField(default={'m': [], 'p': []})),
                ('reactions', models.JSONField(blank=True, default={})),
                ('comments', models.ManyToManyField(blank=True, to='Rule.Comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rule.user')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rule.user'),
        ),
        migrations.AddField(
            model_name='address',
            name='comments',
            field=models.ManyToManyField(blank=True, to='Rule.Comment'),
        ),
        migrations.AddField(
            model_name='address',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='Rule.user'),
        ),
        migrations.AddField(
            model_name='address',
            name='posts',
            field=models.ManyToManyField(blank=True, to='Rule.PostWithMark'),
        ),
        migrations.AddField(
            model_name='address',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='users', to='Rule.User'),
        ),
    ]
